# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET    /profile               controllers.UserController.profile()
GET		/userprofile/:id		controllers.UserController.userProfile(id: Integer)

# Home page
GET    /                           controllers.UserLoginApplication.homePage()
# Routes for login, logout and registration
POST   /login                      controllers.UserLoginApplication.login()
GET    /login                      controllers.UserLoginApplication.toLogin()
GET    /logout                     controllers.UserLoginApplication.logOut()
GET    /homepage                   controllers.UserLoginApplication.homePage()
GET    /register                   controllers.UserLoginApplication.register()
GET    /toregister                 controllers.UserLoginApplication.toRegister()

GET    /confirm/:confirmation      controllers.Verification.verificateEmail(confirmation: String)

# Routes for CRUD product and category

GET    /deleteproduct/:id          controllers.ProductApplication.deleteProduct(id: Integer)

GET 	/addproduct/:id			controllers.ProductApplication.addAdditionalInfo(id:Integer)
POST 	/addproduct/:id			controllers.ProductApplication.addAdditionalInfo(id:Integer)
GET		/addproductpage/:id		controllers.ProductApplication.toInfo(id:Integer)
POST	/addproduct/homepage	controllers.UserLoginApplication.homePage()
GET		/addproductcategory		controllers.ProductApplication.toPickCategory()
GET 	/updateproduct/:id		controllers.ProductApplication.updateProduct(id:Integer)
POST 	/updateproduct/:id		controllers.ProductApplication.updateP(id:Integer)
GET		/renewproduct/:id		controllers.ProductApplication.renew(id:Integer)
GET 	/productpage			controllers.ProductApplication.productPage()
GET    /itempage/logout         controllers.UserLoginApplication.logOut()
GET    /itempage/:id            controllers.ProductApplication.itemPage(id:Integer)
GET    /myproducts/:id          controllers.ProductApplication.myProducts(id: Integer)
POST   /changeshipping/:id      controllers.ProductApplication.changeShippingAddress(id: Integer)

GET		/reportproductpage/:id	controllers.ProductApplication.reportProductPage(id: Integer)
POST	/reportproduct/:id		controllers.ProductApplication.reportProduct(id: Integer)

GET		/openreport/:id			controllers.ProductApplication.openReport(id: Integer)
GET		/deletereport/:id		controllers.ReportController.deleteReport(id: Integer)

GET    /category/:name             controllers.ProductApplication.category(name:String)

GET    /categorypage               controllers.CategoryApplication.categoryPage()
GET    /addnewcategory             controllers.CategoryApplication.addNewCategory()
GET    /newcategory                controllers.CategoryApplication.addCategory()

GET    /deletecategory/:id         controllers.CategoryApplication.deleteCategory(id: Integer)
GET    /updatecategory/:id         controllers.CategoryApplication.updateCategory(id: Integer)
POST   /updatecategory/:id         controllers.CategoryApplication.update(id:Integer)
GET    /deleteuser/:id             controllers.UserController.deleteUser(id:Integer)

POST   /updateuser/:id             controllers.UserController.updateUser(id:Integer)
GET    /updateuser/:id             controllers.UserController.toUpdateUser(id:Integer)


GET    /additionalinfo             controllers.UserController.toAdditionalInfo()
POST   /additionalinfo             controllers.UserController.additionalInfo()


GET    /editinfo                   controllers.UserController.toEditInfo()
POST   /editinfo                   controllers.UserController.editAdditionalInfo()		

GET    /faq                        controllers.FAQController.allFAQs()
POST   /addfaq                     controllers.FAQController.addNewFAQ()
GET    /addfaq                     controllers.FAQController.toAddNewFAQ()
POST   /updatefaq                  controllers.FAQController.updateFAQ(id: Integer)
GET    /updatefaq/:id              controllers.FAQController.toUpdateFAQ(id: Integer)
GET    /deletefaq                  controllers.FAQController.deleteFAQ(id: Integer)


GET    /itempage/:idc/:idp         controllers.ProductApplication.deleteComment(idc: Integer, idp: Integer)
POST   /itempage/:id               controllers.ProductApplication.addNewComment(id: Integer)


GET    /search                     controllers.SearchController.search(q: String)
GET    /searchusers                controllers.SearchController.searchUsers(q: String)

GET    /advancedsearch             controllers.SearchController.advancedSearchPage()
POST   /advancedsearch             controllers.SearchController.advancedSearch(ids: String)



# Routes for contact form

GET    /contactpage                controllers.UserLoginApplication.contactPage()
POST   /contact                    controllers.UserLoginApplication.contact()

GET    /contactsellerpage/:id      controllers.ProductApplication.contactSellerPage(id: Integer)
POST   /contactseller/:id          controllers.ProductApplication.contactSeller(id: Integer)
GET    /contactseller/:id          controllers.ProductApplication.contactSeller(id: Integer)

GET    /replyToMessagePage/:id     controllers.ProductApplication.replyToMessagePage(id: Integer)
POST   /reply/:id                  controllers.ProductApplication.reply(id: Integer)

GET    /open/:id                   controllers.ProductApplication.openMessage(id: Integer)

GET    /deletemessage/:id          controllers.ProductApplication.deleteMessage(id: Integer)


# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file               controllers.Assets.at(path="/public", file)

#Paypal routes
GET    /cartpage/:id               controllers.ProductApplication.cartPage(id: Integer)
POST   /producttocart/:id          controllers.ProductApplication.productToCart(id: Integer)
POST   /changeorderedqty/:id          controllers.ProductApplication.changeOrderedQty(id: Integer)
POST   /addqty/:id                        controllers.ProductApplication.addQty(id: Int)
POST   /subtractqty/:id                            controllers.ProductApplication.subtractQty(id: Int)




GET    /deleteproductcart/:id      controllers.ProductApplication.deleteProductFromCart(id:Integer)

POST   /creditpurchase             controllers.UserLoginApplication.purchaseProcessing()
GET    /ordersuccess               controllers.UserLoginApplication.orderSuccess(paymentID:String,payerID:String,token:String)
GET    /orderfail                  controllers.UserLoginApplication.orderFail()
GET    /orderconfirm               controllers.UserLoginApplication.orderConfirm()
GET    /refundorder/:id            controllers.UserLoginApplication.refundOrder(id: Integer)
#Order routes

GET    /orderpage/:id              controllers.OrderController.orderPage(id: Integer)
GET    /soldorder/:id              controllers.OrderController.soldOrderPage(id:Integer)
GET    /soldorderchecked/:id       controllers.OrderController.soldOrderChecked(id:Integer)

GET    /rating/:id             controllers.UserController.ratingpage(id: Integer)
POST   /rating/:id                 controllers.UserController.rating(id: Integer)

#Paypal routes
GET    /cartpage/:id               controllers.ProductApplication.cartPage(id: Integer)
POST   /producttocart/:id          controllers.ProductApplication.productToCart(id: Integer)
GET    /deleteproductcart/:id      controllers.ProductApplication.deleteProductFromCart(id:Integer)

POST   /creditpurchase             controllers.UserLoginApplication.purchaseProcessing()
GET    /ordersuccess               controllers.UserLoginApplication.orderSuccess(paymentID:String,payerID:String,token:String)
GET    /orderfail                  controllers.UserLoginApplication.orderFail()
GET    /orderconfirm               controllers.UserLoginApplication.orderConfirm()
GET    /refundorder/:id            controllers.UserLoginApplication.refundOrder(id: Integer)

#Order routes
GET    /orderpage/:id              controllers.OrderController.orderPage(id: Integer)

#Web Service routes
POST   /api/register               ws.controllers.JsonController.registration()
POST   /api/login                  ws.controllers.JsonController.login()
POST   /api/addproduct             ws.controllers.JsonController.addProduct()
GET		/api/showuser/:id 			ws.controllers.JsonController.viewUser(id: Integer)
GET    /api/showproduct/:id        ws.controllers.JsonController.viewProduct(id: Integer)
GET    /api/showuserproducts/:id   ws.controllers.JsonController.userProducts(id: Integer)
GET    /api/allproducts            ws.controllers.JsonController.allProducts()
GET    /api/allusers               ws.controllers.JsonController.allUsers()
POST	/api/tocart					ws.controllers.JsonController.toCart()
POST	/api/getcart				ws.controllers.JsonController.getCart()

#Blog routes
GET		/blog					controllers.BlogController.blogsPage()
GET    	/addBlog                controllers.BlogController.toAddNewBlog()
POST   	/addBlog                controllers.BlogController.addNewBlog()
POST   	/updateBlog             controllers.BlogController.updateBlog(id: Integer)
GET    	/updateBlog/:id         controllers.BlogController.toUpdateBlog(id: Integer)
GET   	/deleteBlog             controllers.BlogController.deleteBlog(id: Integer)


# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file            controllers.Assets.at(path="/public", file)

